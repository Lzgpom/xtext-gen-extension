/**
 * generated by Xtext 2.27.0
 */
package org.eclipse.xtext.example.arithmetics.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.example.arithmetics.arithmetics.DeclaredParameter;
import org.eclipse.xtext.example.arithmetics.arithmetics.Definition;
import org.eclipse.xtext.example.arithmetics.arithmetics.Expression;
import org.eclipse.xtext.example.arithmetics.arithmetics.Import;
import org.eclipse.xtext.example.arithmetics.arithmetics.Statement;
import org.eclipse.xtext.example.arithmetics.services.ArithmeticsGrammarAccess;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class ArithmeticsFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ArithmeticsGrammarAccess _arithmeticsGrammarAccess;

  protected void _format(final org.eclipse.xtext.example.arithmetics.arithmetics.Module module, @Extension final IFormattableDocument document) {
    EList<Import> _imports = module.getImports();
    for (final Import _import : _imports) {
      document.<Import>format(_import);
    }
    EList<Statement> _statements = module.getStatements();
    for (final Statement statement : _statements) {
      document.<Statement>format(statement);
    }
  }

  protected void _format(final Definition definition, @Extension final IFormattableDocument document) {
    EList<DeclaredParameter> _args = definition.getArgs();
    for (final DeclaredParameter declaredParameter : _args) {
      document.<DeclaredParameter>format(declaredParameter);
    }
    document.<Expression>format(definition.getExpr());
  }

  public void format(final Object definition, final IFormattableDocument document) {
    if (definition instanceof XtextResource) {
      _format((XtextResource)definition, document);
      return;
    } else if (definition instanceof Definition) {
      _format((Definition)definition, document);
      return;
    } else if (definition instanceof org.eclipse.xtext.example.arithmetics.arithmetics.Module) {
      _format((org.eclipse.xtext.example.arithmetics.arithmetics.Module)definition, document);
      return;
    } else if (definition instanceof EObject) {
      _format((EObject)definition, document);
      return;
    } else if (definition == null) {
      _format((Void)null, document);
      return;
    } else if (definition != null) {
      _format(definition, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(definition, document).toString());
    }
  }
}
