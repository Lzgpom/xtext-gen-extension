/*
 * generated by Xtext 2.27.0
 */
package org.eclipse.xtext.example.homeautomation.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.example.homeautomation.ruleEngine.Device
import org.eclipse.xtext.example.homeautomation.ruleEngine.Model
import org.eclipse.xtext.example.homeautomation.services.RuleEngineGrammarAccess
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter

class RuleEngineFormatter extends XbaseFormatter {
	
	@Inject extension RuleEngineGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (declaration : model.declarations) {
			declaration.format
		}
	}

	def dispatch void format(Device device, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (state : device.states) {
			state.format
		}
	}
	
	// TODO: implement for Rule, XBlockExpression, XSwitchExpression
}
