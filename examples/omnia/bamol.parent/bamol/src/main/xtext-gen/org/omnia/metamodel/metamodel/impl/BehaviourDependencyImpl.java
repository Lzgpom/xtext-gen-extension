/**
 * generated by Xtext 2.27.0
 */
package org.omnia.metamodel.metamodel.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.omnia.metamodel.metamodel.BehaviourDependency;
import org.omnia.metamodel.metamodel.BehaviourDependencyType;
import org.omnia.metamodel.metamodel.ExecutionLocation;
import org.omnia.metamodel.metamodel.MetamodelPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Behaviour Dependency</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getExecutionLocation <em>Execution Location</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getPath <em>Path</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getAssemblyName <em>Assembly Name</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.BehaviourDependencyImpl#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BehaviourDependencyImpl extends MinimalEObjectImpl.Container implements BehaviourDependency
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final BehaviourDependencyType TYPE_EDEFAULT = BehaviourDependencyType.FILE;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected BehaviourDependencyType type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final int VERSION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected int version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getExecutionLocation() <em>Execution Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExecutionLocation()
   * @generated
   * @ordered
   */
  protected static final ExecutionLocation EXECUTION_LOCATION_EDEFAULT = ExecutionLocation.EXTERNAL;

  /**
   * The cached value of the '{@link #getExecutionLocation() <em>Execution Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExecutionLocation()
   * @generated
   * @ordered
   */
  protected ExecutionLocation executionLocation = EXECUTION_LOCATION_EDEFAULT;

  /**
   * The default value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected static final String PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected String path = PATH_EDEFAULT;

  /**
   * The default value of the '{@link #getAssemblyName() <em>Assembly Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssemblyName()
   * @generated
   * @ordered
   */
  protected static final String ASSEMBLY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAssemblyName() <em>Assembly Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssemblyName()
   * @generated
   * @ordered
   */
  protected String assemblyName = ASSEMBLY_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected static final String EXPRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected String expression = EXPRESSION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BehaviourDependencyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetamodelPackage.Literals.BEHAVIOUR_DEPENDENCY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviourDependencyType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(BehaviourDependencyType newType)
  {
    BehaviourDependencyType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(int newVersion)
  {
    int oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExecutionLocation getExecutionLocation()
  {
    return executionLocation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExecutionLocation(ExecutionLocation newExecutionLocation)
  {
    ExecutionLocation oldExecutionLocation = executionLocation;
    executionLocation = newExecutionLocation == null ? EXECUTION_LOCATION_EDEFAULT : newExecutionLocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXECUTION_LOCATION, oldExecutionLocation, executionLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPath(String newPath)
  {
    String oldPath = path;
    path = newPath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__PATH, oldPath, path));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAssemblyName()
  {
    return assemblyName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssemblyName(String newAssemblyName)
  {
    String oldAssemblyName = assemblyName;
    assemblyName = newAssemblyName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__ASSEMBLY_NAME, oldAssemblyName, assemblyName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpression(String newExpression)
  {
    String oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXPRESSION, oldExpression, expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__NAME:
        return getName();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__DESCRIPTION:
        return getDescription();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__TYPE:
        return getType();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__VERSION:
        return getVersion();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXECUTION_LOCATION:
        return getExecutionLocation();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__PATH:
        return getPath();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__ASSEMBLY_NAME:
        return getAssemblyName();
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXPRESSION:
        return getExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__NAME:
        setName((String)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__TYPE:
        setType((BehaviourDependencyType)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__VERSION:
        setVersion((Integer)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXECUTION_LOCATION:
        setExecutionLocation((ExecutionLocation)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__PATH:
        setPath((String)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__ASSEMBLY_NAME:
        setAssemblyName((String)newValue);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXPRESSION:
        setExpression((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXECUTION_LOCATION:
        setExecutionLocation(EXECUTION_LOCATION_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__PATH:
        setPath(PATH_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__ASSEMBLY_NAME:
        setAssemblyName(ASSEMBLY_NAME_EDEFAULT);
        return;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXPRESSION:
        setExpression(EXPRESSION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__TYPE:
        return type != TYPE_EDEFAULT;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__VERSION:
        return version != VERSION_EDEFAULT;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXECUTION_LOCATION:
        return executionLocation != EXECUTION_LOCATION_EDEFAULT;
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__PATH:
        return PATH_EDEFAULT == null ? path != null : !PATH_EDEFAULT.equals(path);
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__ASSEMBLY_NAME:
        return ASSEMBLY_NAME_EDEFAULT == null ? assemblyName != null : !ASSEMBLY_NAME_EDEFAULT.equals(assemblyName);
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY__EXPRESSION:
        return EXPRESSION_EDEFAULT == null ? expression != null : !EXPRESSION_EDEFAULT.equals(expression);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(", type: ");
    result.append(type);
    result.append(", version: ");
    result.append(version);
    result.append(", executionLocation: ");
    result.append(executionLocation);
    result.append(", path: ");
    result.append(path);
    result.append(", assemblyName: ");
    result.append(assemblyName);
    result.append(", expression: ");
    result.append(expression);
    result.append(')');
    return result.toString();
  }

} //BehaviourDependencyImpl
