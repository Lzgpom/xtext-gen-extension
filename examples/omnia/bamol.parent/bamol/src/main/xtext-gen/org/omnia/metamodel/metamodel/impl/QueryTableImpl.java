/**
 * generated by Xtext 2.27.0
 */
package org.omnia.metamodel.metamodel.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.omnia.metamodel.metamodel.MetamodelPackage;
import org.omnia.metamodel.metamodel.QueryFilter;
import org.omnia.metamodel.metamodel.QueryOrderedProperty;
import org.omnia.metamodel.metamodel.QueryProperty;
import org.omnia.metamodel.metamodel.QueryTable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Query Table</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.QueryTableImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.QueryTableImpl#getAlias <em>Alias</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.QueryTableImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.QueryTableImpl#getOrderedProperties <em>Ordered Properties</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.QueryTableImpl#getFilter <em>Filter</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QueryTableImpl extends MinimalEObjectImpl.Container implements QueryTable
{
  /**
   * The default value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected static final String DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected String definition = DEFINITION_EDEFAULT;

  /**
   * The default value of the '{@link #getAlias() <em>Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlias()
   * @generated
   * @ordered
   */
  protected static final String ALIAS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlias() <em>Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlias()
   * @generated
   * @ordered
   */
  protected String alias = ALIAS_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<QueryProperty> properties;

  /**
   * The cached value of the '{@link #getOrderedProperties() <em>Ordered Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrderedProperties()
   * @generated
   * @ordered
   */
  protected EList<QueryOrderedProperty> orderedProperties;

  /**
   * The cached value of the '{@link #getFilter() <em>Filter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilter()
   * @generated
   * @ordered
   */
  protected QueryFilter filter;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QueryTableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetamodelPackage.Literals.QUERY_TABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefinition(String newDefinition)
  {
    String oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.QUERY_TABLE__DEFINITION, oldDefinition, definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAlias()
  {
    return alias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAlias(String newAlias)
  {
    String oldAlias = alias;
    alias = newAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.QUERY_TABLE__ALIAS, oldAlias, alias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<QueryProperty> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<QueryProperty>(QueryProperty.class, this, MetamodelPackage.QUERY_TABLE__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<QueryOrderedProperty> getOrderedProperties()
  {
    if (orderedProperties == null)
    {
      orderedProperties = new EObjectContainmentEList<QueryOrderedProperty>(QueryOrderedProperty.class, this, MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES);
    }
    return orderedProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryFilter getFilter()
  {
    return filter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilter(QueryFilter newFilter, NotificationChain msgs)
  {
    QueryFilter oldFilter = filter;
    filter = newFilter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetamodelPackage.QUERY_TABLE__FILTER, oldFilter, newFilter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilter(QueryFilter newFilter)
  {
    if (newFilter != filter)
    {
      NotificationChain msgs = null;
      if (filter != null)
        msgs = ((InternalEObject)filter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetamodelPackage.QUERY_TABLE__FILTER, null, msgs);
      if (newFilter != null)
        msgs = ((InternalEObject)newFilter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetamodelPackage.QUERY_TABLE__FILTER, null, msgs);
      msgs = basicSetFilter(newFilter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.QUERY_TABLE__FILTER, newFilter, newFilter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetamodelPackage.QUERY_TABLE__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES:
        return ((InternalEList<?>)getOrderedProperties()).basicRemove(otherEnd, msgs);
      case MetamodelPackage.QUERY_TABLE__FILTER:
        return basicSetFilter(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetamodelPackage.QUERY_TABLE__DEFINITION:
        return getDefinition();
      case MetamodelPackage.QUERY_TABLE__ALIAS:
        return getAlias();
      case MetamodelPackage.QUERY_TABLE__PROPERTIES:
        return getProperties();
      case MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES:
        return getOrderedProperties();
      case MetamodelPackage.QUERY_TABLE__FILTER:
        return getFilter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetamodelPackage.QUERY_TABLE__DEFINITION:
        setDefinition((String)newValue);
        return;
      case MetamodelPackage.QUERY_TABLE__ALIAS:
        setAlias((String)newValue);
        return;
      case MetamodelPackage.QUERY_TABLE__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends QueryProperty>)newValue);
        return;
      case MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES:
        getOrderedProperties().clear();
        getOrderedProperties().addAll((Collection<? extends QueryOrderedProperty>)newValue);
        return;
      case MetamodelPackage.QUERY_TABLE__FILTER:
        setFilter((QueryFilter)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.QUERY_TABLE__DEFINITION:
        setDefinition(DEFINITION_EDEFAULT);
        return;
      case MetamodelPackage.QUERY_TABLE__ALIAS:
        setAlias(ALIAS_EDEFAULT);
        return;
      case MetamodelPackage.QUERY_TABLE__PROPERTIES:
        getProperties().clear();
        return;
      case MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES:
        getOrderedProperties().clear();
        return;
      case MetamodelPackage.QUERY_TABLE__FILTER:
        setFilter((QueryFilter)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.QUERY_TABLE__DEFINITION:
        return DEFINITION_EDEFAULT == null ? definition != null : !DEFINITION_EDEFAULT.equals(definition);
      case MetamodelPackage.QUERY_TABLE__ALIAS:
        return ALIAS_EDEFAULT == null ? alias != null : !ALIAS_EDEFAULT.equals(alias);
      case MetamodelPackage.QUERY_TABLE__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case MetamodelPackage.QUERY_TABLE__ORDERED_PROPERTIES:
        return orderedProperties != null && !orderedProperties.isEmpty();
      case MetamodelPackage.QUERY_TABLE__FILTER:
        return filter != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (definition: ");
    result.append(definition);
    result.append(", alias: ");
    result.append(alias);
    result.append(')');
    return result.toString();
  }

} //QueryTableImpl
