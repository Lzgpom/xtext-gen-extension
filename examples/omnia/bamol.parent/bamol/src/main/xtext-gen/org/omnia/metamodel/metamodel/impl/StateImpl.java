/**
 * generated by Xtext 2.27.0
 */
package org.omnia.metamodel.metamodel.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.omnia.metamodel.metamodel.MetamodelPackage;
import org.omnia.metamodel.metamodel.State;
import org.omnia.metamodel.metamodel.StateBehaviour;
import org.omnia.metamodel.metamodel.StateDecision;
import org.omnia.metamodel.metamodel.StateEnabledAttribute;
import org.omnia.metamodel.metamodel.StateEnabledOperation;
import org.omnia.metamodel.metamodel.StateTransition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>State</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#isIsInitial <em>Is Initial</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#isDisableOperations <em>Disable Operations</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#isDisableAttributes <em>Disable Attributes</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getAssignToExpression <em>Assign To Expression</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getTransitions <em>Transitions</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getDecisions <em>Decisions</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getEnableOperations <em>Enable Operations</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getEnabledAttributes <em>Enabled Attributes</em>}</li>
 *   <li>{@link org.omnia.metamodel.metamodel.impl.StateImpl#getBehaviours <em>Behaviours</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StateImpl extends MinimalEObjectImpl.Container implements State
{
  /**
   * The default value of the '{@link #isIsInitial() <em>Is Initial</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsInitial()
   * @generated
   * @ordered
   */
  protected static final boolean IS_INITIAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsInitial() <em>Is Initial</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsInitial()
   * @generated
   * @ordered
   */
  protected boolean isInitial = IS_INITIAL_EDEFAULT;

  /**
   * The default value of the '{@link #isDisableOperations() <em>Disable Operations</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDisableOperations()
   * @generated
   * @ordered
   */
  protected static final boolean DISABLE_OPERATIONS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDisableOperations() <em>Disable Operations</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDisableOperations()
   * @generated
   * @ordered
   */
  protected boolean disableOperations = DISABLE_OPERATIONS_EDEFAULT;

  /**
   * The default value of the '{@link #isDisableAttributes() <em>Disable Attributes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDisableAttributes()
   * @generated
   * @ordered
   */
  protected static final boolean DISABLE_ATTRIBUTES_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDisableAttributes() <em>Disable Attributes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDisableAttributes()
   * @generated
   * @ordered
   */
  protected boolean disableAttributes = DISABLE_ATTRIBUTES_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getAssignToExpression() <em>Assign To Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignToExpression()
   * @generated
   * @ordered
   */
  protected static final String ASSIGN_TO_EXPRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAssignToExpression() <em>Assign To Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignToExpression()
   * @generated
   * @ordered
   */
  protected String assignToExpression = ASSIGN_TO_EXPRESSION_EDEFAULT;

  /**
   * The cached value of the '{@link #getTransitions() <em>Transitions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransitions()
   * @generated
   * @ordered
   */
  protected EList<StateTransition> transitions;

  /**
   * The cached value of the '{@link #getDecisions() <em>Decisions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecisions()
   * @generated
   * @ordered
   */
  protected EList<StateDecision> decisions;

  /**
   * The cached value of the '{@link #getEnableOperations() <em>Enable Operations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnableOperations()
   * @generated
   * @ordered
   */
  protected EList<StateEnabledOperation> enableOperations;

  /**
   * The cached value of the '{@link #getEnabledAttributes() <em>Enabled Attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnabledAttributes()
   * @generated
   * @ordered
   */
  protected StateEnabledAttribute enabledAttributes;

  /**
   * The cached value of the '{@link #getBehaviours() <em>Behaviours</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviours()
   * @generated
   * @ordered
   */
  protected EList<StateBehaviour> behaviours;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetamodelPackage.Literals.STATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsInitial()
  {
    return isInitial;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsInitial(boolean newIsInitial)
  {
    boolean oldIsInitial = isInitial;
    isInitial = newIsInitial;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__IS_INITIAL, oldIsInitial, isInitial));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDisableOperations()
  {
    return disableOperations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDisableOperations(boolean newDisableOperations)
  {
    boolean oldDisableOperations = disableOperations;
    disableOperations = newDisableOperations;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__DISABLE_OPERATIONS, oldDisableOperations, disableOperations));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDisableAttributes()
  {
    return disableAttributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDisableAttributes(boolean newDisableAttributes)
  {
    boolean oldDisableAttributes = disableAttributes;
    disableAttributes = newDisableAttributes;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__DISABLE_ATTRIBUTES, oldDisableAttributes, disableAttributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAssignToExpression()
  {
    return assignToExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssignToExpression(String newAssignToExpression)
  {
    String oldAssignToExpression = assignToExpression;
    assignToExpression = newAssignToExpression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__ASSIGN_TO_EXPRESSION, oldAssignToExpression, assignToExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateTransition> getTransitions()
  {
    if (transitions == null)
    {
      transitions = new EObjectContainmentEList<StateTransition>(StateTransition.class, this, MetamodelPackage.STATE__TRANSITIONS);
    }
    return transitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateDecision> getDecisions()
  {
    if (decisions == null)
    {
      decisions = new EObjectContainmentEList<StateDecision>(StateDecision.class, this, MetamodelPackage.STATE__DECISIONS);
    }
    return decisions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateEnabledOperation> getEnableOperations()
  {
    if (enableOperations == null)
    {
      enableOperations = new EObjectContainmentEList<StateEnabledOperation>(StateEnabledOperation.class, this, MetamodelPackage.STATE__ENABLE_OPERATIONS);
    }
    return enableOperations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateEnabledAttribute getEnabledAttributes()
  {
    return enabledAttributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnabledAttributes(StateEnabledAttribute newEnabledAttributes, NotificationChain msgs)
  {
    StateEnabledAttribute oldEnabledAttributes = enabledAttributes;
    enabledAttributes = newEnabledAttributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__ENABLED_ATTRIBUTES, oldEnabledAttributes, newEnabledAttributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnabledAttributes(StateEnabledAttribute newEnabledAttributes)
  {
    if (newEnabledAttributes != enabledAttributes)
    {
      NotificationChain msgs = null;
      if (enabledAttributes != null)
        msgs = ((InternalEObject)enabledAttributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetamodelPackage.STATE__ENABLED_ATTRIBUTES, null, msgs);
      if (newEnabledAttributes != null)
        msgs = ((InternalEObject)newEnabledAttributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetamodelPackage.STATE__ENABLED_ATTRIBUTES, null, msgs);
      msgs = basicSetEnabledAttributes(newEnabledAttributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetamodelPackage.STATE__ENABLED_ATTRIBUTES, newEnabledAttributes, newEnabledAttributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateBehaviour> getBehaviours()
  {
    if (behaviours == null)
    {
      behaviours = new EObjectContainmentEList<StateBehaviour>(StateBehaviour.class, this, MetamodelPackage.STATE__BEHAVIOURS);
    }
    return behaviours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetamodelPackage.STATE__TRANSITIONS:
        return ((InternalEList<?>)getTransitions()).basicRemove(otherEnd, msgs);
      case MetamodelPackage.STATE__DECISIONS:
        return ((InternalEList<?>)getDecisions()).basicRemove(otherEnd, msgs);
      case MetamodelPackage.STATE__ENABLE_OPERATIONS:
        return ((InternalEList<?>)getEnableOperations()).basicRemove(otherEnd, msgs);
      case MetamodelPackage.STATE__ENABLED_ATTRIBUTES:
        return basicSetEnabledAttributes(null, msgs);
      case MetamodelPackage.STATE__BEHAVIOURS:
        return ((InternalEList<?>)getBehaviours()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetamodelPackage.STATE__IS_INITIAL:
        return isIsInitial();
      case MetamodelPackage.STATE__DISABLE_OPERATIONS:
        return isDisableOperations();
      case MetamodelPackage.STATE__DISABLE_ATTRIBUTES:
        return isDisableAttributes();
      case MetamodelPackage.STATE__NAME:
        return getName();
      case MetamodelPackage.STATE__DESCRIPTION:
        return getDescription();
      case MetamodelPackage.STATE__ASSIGN_TO_EXPRESSION:
        return getAssignToExpression();
      case MetamodelPackage.STATE__TRANSITIONS:
        return getTransitions();
      case MetamodelPackage.STATE__DECISIONS:
        return getDecisions();
      case MetamodelPackage.STATE__ENABLE_OPERATIONS:
        return getEnableOperations();
      case MetamodelPackage.STATE__ENABLED_ATTRIBUTES:
        return getEnabledAttributes();
      case MetamodelPackage.STATE__BEHAVIOURS:
        return getBehaviours();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetamodelPackage.STATE__IS_INITIAL:
        setIsInitial((Boolean)newValue);
        return;
      case MetamodelPackage.STATE__DISABLE_OPERATIONS:
        setDisableOperations((Boolean)newValue);
        return;
      case MetamodelPackage.STATE__DISABLE_ATTRIBUTES:
        setDisableAttributes((Boolean)newValue);
        return;
      case MetamodelPackage.STATE__NAME:
        setName((String)newValue);
        return;
      case MetamodelPackage.STATE__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MetamodelPackage.STATE__ASSIGN_TO_EXPRESSION:
        setAssignToExpression((String)newValue);
        return;
      case MetamodelPackage.STATE__TRANSITIONS:
        getTransitions().clear();
        getTransitions().addAll((Collection<? extends StateTransition>)newValue);
        return;
      case MetamodelPackage.STATE__DECISIONS:
        getDecisions().clear();
        getDecisions().addAll((Collection<? extends StateDecision>)newValue);
        return;
      case MetamodelPackage.STATE__ENABLE_OPERATIONS:
        getEnableOperations().clear();
        getEnableOperations().addAll((Collection<? extends StateEnabledOperation>)newValue);
        return;
      case MetamodelPackage.STATE__ENABLED_ATTRIBUTES:
        setEnabledAttributes((StateEnabledAttribute)newValue);
        return;
      case MetamodelPackage.STATE__BEHAVIOURS:
        getBehaviours().clear();
        getBehaviours().addAll((Collection<? extends StateBehaviour>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.STATE__IS_INITIAL:
        setIsInitial(IS_INITIAL_EDEFAULT);
        return;
      case MetamodelPackage.STATE__DISABLE_OPERATIONS:
        setDisableOperations(DISABLE_OPERATIONS_EDEFAULT);
        return;
      case MetamodelPackage.STATE__DISABLE_ATTRIBUTES:
        setDisableAttributes(DISABLE_ATTRIBUTES_EDEFAULT);
        return;
      case MetamodelPackage.STATE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MetamodelPackage.STATE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MetamodelPackage.STATE__ASSIGN_TO_EXPRESSION:
        setAssignToExpression(ASSIGN_TO_EXPRESSION_EDEFAULT);
        return;
      case MetamodelPackage.STATE__TRANSITIONS:
        getTransitions().clear();
        return;
      case MetamodelPackage.STATE__DECISIONS:
        getDecisions().clear();
        return;
      case MetamodelPackage.STATE__ENABLE_OPERATIONS:
        getEnableOperations().clear();
        return;
      case MetamodelPackage.STATE__ENABLED_ATTRIBUTES:
        setEnabledAttributes((StateEnabledAttribute)null);
        return;
      case MetamodelPackage.STATE__BEHAVIOURS:
        getBehaviours().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetamodelPackage.STATE__IS_INITIAL:
        return isInitial != IS_INITIAL_EDEFAULT;
      case MetamodelPackage.STATE__DISABLE_OPERATIONS:
        return disableOperations != DISABLE_OPERATIONS_EDEFAULT;
      case MetamodelPackage.STATE__DISABLE_ATTRIBUTES:
        return disableAttributes != DISABLE_ATTRIBUTES_EDEFAULT;
      case MetamodelPackage.STATE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MetamodelPackage.STATE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MetamodelPackage.STATE__ASSIGN_TO_EXPRESSION:
        return ASSIGN_TO_EXPRESSION_EDEFAULT == null ? assignToExpression != null : !ASSIGN_TO_EXPRESSION_EDEFAULT.equals(assignToExpression);
      case MetamodelPackage.STATE__TRANSITIONS:
        return transitions != null && !transitions.isEmpty();
      case MetamodelPackage.STATE__DECISIONS:
        return decisions != null && !decisions.isEmpty();
      case MetamodelPackage.STATE__ENABLE_OPERATIONS:
        return enableOperations != null && !enableOperations.isEmpty();
      case MetamodelPackage.STATE__ENABLED_ATTRIBUTES:
        return enabledAttributes != null;
      case MetamodelPackage.STATE__BEHAVIOURS:
        return behaviours != null && !behaviours.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (isInitial: ");
    result.append(isInitial);
    result.append(", disableOperations: ");
    result.append(disableOperations);
    result.append(", disableAttributes: ");
    result.append(disableAttributes);
    result.append(", name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(", assignToExpression: ");
    result.append(assignToExpression);
    result.append(')');
    return result.toString();
  }

} //StateImpl
