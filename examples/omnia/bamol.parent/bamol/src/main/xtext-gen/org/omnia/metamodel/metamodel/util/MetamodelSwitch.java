/**
 * generated by Xtext 2.27.0
 */
package org.omnia.metamodel.metamodel.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.omnia.metamodel.metamodel.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.omnia.metamodel.metamodel.MetamodelPackage
 * @generated
 */
public class MetamodelSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MetamodelPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MetamodelSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MetamodelPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MetamodelPackage.APP:
      {
        App app = (App)theEObject;
        T result = caseApp(app);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MTYPE:
      {
        MType mType = (MType)theEObject;
        T result = caseMType(mType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.AGENT:
      {
        Agent agent = (Agent)theEObject;
        T result = caseAgent(agent);
        if (result == null) result = caseEntity(agent);
        if (result == null) result = caseMType(agent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.APPLICATION_BEHAVIOUR:
      {
        ApplicationBehaviour applicationBehaviour = (ApplicationBehaviour)theEObject;
        T result = caseApplicationBehaviour(applicationBehaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.COMMITEMENT:
      {
        Commitement commitement = (Commitement)theEObject;
        T result = caseCommitement(commitement);
        if (result == null) result = caseEntity(commitement);
        if (result == null) result = caseMType(commitement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.DASHBOARD:
      {
        Dashboard dashboard = (Dashboard)theEObject;
        T result = caseDashboard(dashboard);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.DATA_SOURCE:
      {
        DataSource dataSource = (DataSource)theEObject;
        T result = caseDataSource(dataSource);
        if (result == null) result = caseMType(dataSource);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.DOCUMENT:
      {
        Document document = (Document)theEObject;
        T result = caseDocument(document);
        if (result == null) result = caseEntity(document);
        if (result == null) result = caseMType(document);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ENUMERATION:
      {
        Enumeration enumeration = (Enumeration)theEObject;
        T result = caseEnumeration(enumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.FORM:
      {
        Form form = (Form)theEObject;
        T result = caseForm(form);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.GENERIC_ENTITY:
      {
        GenericEntity genericEntity = (GenericEntity)theEObject;
        T result = caseGenericEntity(genericEntity);
        if (result == null) result = caseEntity(genericEntity);
        if (result == null) result = caseMType(genericEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.LIST:
      {
        List list = (List)theEObject;
        T result = caseList(list);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY:
      {
        Query query = (Query)theEObject;
        T result = caseQuery(query);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.RESOURCE:
      {
        Resource resource = (Resource)theEObject;
        T result = caseResource(resource);
        if (result == null) result = caseEntity(resource);
        if (result == null) result = caseMType(resource);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.SELECTOR:
      {
        Selector selector = (Selector)theEObject;
        T result = caseSelector(selector);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.SERIE:
      {
        Serie serie = (Serie)theEObject;
        T result = caseSerie(serie);
        if (result == null) result = caseEntity(serie);
        if (result == null) result = caseMType(serie);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_MACHINE:
      {
        StateMachine stateMachine = (StateMachine)theEObject;
        T result = caseStateMachine(stateMachine);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.EVENT:
      {
        Event event = (Event)theEObject;
        T result = caseEvent(event);
        if (result == null) result = caseEntity(event);
        if (result == null) result = caseMType(event);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.APPLICATION_MENU:
      {
        ApplicationMenu applicationMenu = (ApplicationMenu)theEObject;
        T result = caseApplicationMenu(applicationMenu);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.LANGUAGE:
      {
        Language language = (Language)theEObject;
        T result = caseLanguage(language);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.WEB_COMPONENT:
      {
        WebComponent webComponent = (WebComponent)theEObject;
        T result = caseWebComponent(webComponent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.TEXT_TEMPLATE:
      {
        TextTemplate textTemplate = (TextTemplate)theEObject;
        T result = caseTextTemplate(textTemplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.THEME:
      {
        Theme theme = (Theme)theEObject;
        T result = caseTheme(theme);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.AUTHORIZATION_POLICY:
      {
        AuthorizationPolicy authorizationPolicy = (AuthorizationPolicy)theEObject;
        T result = caseAuthorizationPolicy(authorizationPolicy);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.AUTHORIZATION_ROLE:
      {
        AuthorizationRole authorizationRole = (AuthorizationRole)theEObject;
        T result = caseAuthorizationRole(authorizationRole);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MATTRIBUTE:
      {
        MAttribute mAttribute = (MAttribute)theEObject;
        T result = caseMAttribute(mAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ENTITY_BEHAVIOUR:
      {
        EntityBehaviour entityBehaviour = (EntityBehaviour)theEObject;
        T result = caseEntityBehaviour(entityBehaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.DATA_BEHAVIOUR:
      {
        DataBehaviour dataBehaviour = (DataBehaviour)theEObject;
        T result = caseDataBehaviour(dataBehaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.BEHAVIOUR_NAMESPACE:
      {
        BehaviourNamespace behaviourNamespace = (BehaviourNamespace)theEObject;
        T result = caseBehaviourNamespace(behaviourNamespace);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MMULTIPLICITY:
      {
        MMultiplicity mMultiplicity = (MMultiplicity)theEObject;
        T result = caseMMultiplicity(mMultiplicity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MENUMERATION:
      {
        MEnumeration mEnumeration = (MEnumeration)theEObject;
        T result = caseMEnumeration(mEnumeration);
        if (result == null) result = caseMType(mEnumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MBOOLEAN:
      {
        MBoolean mBoolean = (MBoolean)theEObject;
        T result = caseMBoolean(mBoolean);
        if (result == null) result = caseMType(mBoolean);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MDATE:
      {
        MDate mDate = (MDate)theEObject;
        T result = caseMDate(mDate);
        if (result == null) result = caseMType(mDate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MDECIMAL:
      {
        MDecimal mDecimal = (MDecimal)theEObject;
        T result = caseMDecimal(mDecimal);
        if (result == null) result = caseMType(mDecimal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MINTEGER:
      {
        MInteger mInteger = (MInteger)theEObject;
        T result = caseMInteger(mInteger);
        if (result == null) result = caseMType(mInteger);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MTEXT:
      {
        MText mText = (MText)theEObject;
        T result = caseMText(mText);
        if (result == null) result = caseMType(mText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.MUUID:
      {
        MUuid mUuid = (MUuid)theEObject;
        T result = caseMUuid(mUuid);
        if (result == null) result = caseMType(mUuid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ELEMENT_ATTRIBUTE:
      {
        ElementAttribute elementAttribute = (ElementAttribute)theEObject;
        T result = caseElementAttribute(elementAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ELEMENT_BEHAVIOUR:
      {
        ElementBehaviour elementBehaviour = (ElementBehaviour)theEObject;
        T result = caseElementBehaviour(elementBehaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.INNER_ELEMENT:
      {
        InnerElement innerElement = (InnerElement)theEObject;
        T result = caseInnerElement(innerElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.BEHAVIOUR_DEPENDENCY:
      {
        BehaviourDependency behaviourDependency = (BehaviourDependency)theEObject;
        T result = caseBehaviourDependency(behaviourDependency);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.ENUMERATION_VALUE:
      {
        EnumerationValue enumerationValue = (EnumerationValue)theEObject;
        T result = caseEnumerationValue(enumerationValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_TABLE:
      {
        QueryTable queryTable = (QueryTable)theEObject;
        T result = caseQueryTable(queryTable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_JOIN:
      {
        QueryJoin queryJoin = (QueryJoin)theEObject;
        T result = caseQueryJoin(queryJoin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_PROPERTY:
      {
        QueryProperty queryProperty = (QueryProperty)theEObject;
        T result = caseQueryProperty(queryProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_ORDERED_PROPERTY:
      {
        QueryOrderedProperty queryOrderedProperty = (QueryOrderedProperty)theEObject;
        T result = caseQueryOrderedProperty(queryOrderedProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_FILTER:
      {
        QueryFilter queryFilter = (QueryFilter)theEObject;
        T result = caseQueryFilter(queryFilter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.QUERY_JOIN_PREDICATE:
      {
        QueryJoinPredicate queryJoinPredicate = (QueryJoinPredicate)theEObject;
        T result = caseQueryJoinPredicate(queryJoinPredicate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE:
      {
        State state = (State)theEObject;
        T result = caseState(state);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_TRANSITION:
      {
        StateTransition stateTransition = (StateTransition)theEObject;
        T result = caseStateTransition(stateTransition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_DECISION:
      {
        StateDecision stateDecision = (StateDecision)theEObject;
        T result = caseStateDecision(stateDecision);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_ENABLED_OPERATION:
      {
        StateEnabledOperation stateEnabledOperation = (StateEnabledOperation)theEObject;
        T result = caseStateEnabledOperation(stateEnabledOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_ENABLED_ATTRIBUTE:
      {
        StateEnabledAttribute stateEnabledAttribute = (StateEnabledAttribute)theEObject;
        T result = caseStateEnabledAttribute(stateEnabledAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.STATE_BEHAVIOUR:
      {
        StateBehaviour stateBehaviour = (StateBehaviour)theEObject;
        T result = caseStateBehaviour(stateBehaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.LANGUAGE_TEXT:
      {
        LanguageText languageText = (LanguageText)theEObject;
        T result = caseLanguageText(languageText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.AUTHORIZATION_POLICY_PERMISSION:
      {
        AuthorizationPolicyPermission authorizationPolicyPermission = (AuthorizationPolicyPermission)theEObject;
        T result = caseAuthorizationPolicyPermission(authorizationPolicyPermission);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MetamodelPackage.AUTHORIZATION_ROLE_SUBJECT:
      {
        AuthorizationRoleSubject authorizationRoleSubject = (AuthorizationRoleSubject)theEObject;
        T result = caseAuthorizationRoleSubject(authorizationRoleSubject);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>App</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>App</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApp(App object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMType(MType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgent(Agent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationBehaviour(ApplicationBehaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Commitement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Commitement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommitement(Commitement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dashboard</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dashboard</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDashboard(Dashboard object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Source</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Source</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataSource(DataSource object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Document</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Document</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDocument(Document object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumeration(Enumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Form</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Form</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForm(Form object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generic Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generic Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenericEntity(GenericEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseList(List object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQuery(Query object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResource(Resource object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Selector</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Selector</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelector(Selector object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Serie</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Serie</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSerie(Serie object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Machine</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Machine</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateMachine(StateMachine object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Event</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Event</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEvent(Event object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Menu</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Menu</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationMenu(ApplicationMenu object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Language</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Language</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLanguage(Language object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Web Component</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Web Component</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWebComponent(WebComponent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Text Template</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Text Template</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTextTemplate(TextTemplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Theme</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Theme</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTheme(Theme object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Authorization Policy</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Authorization Policy</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAuthorizationPolicy(AuthorizationPolicy object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Authorization Role</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Authorization Role</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAuthorizationRole(AuthorizationRole object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MAttribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MAttribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMAttribute(MAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityBehaviour(EntityBehaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataBehaviour(DataBehaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behaviour Namespace</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behaviour Namespace</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBehaviourNamespace(BehaviourNamespace object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMultiplicity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMultiplicity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMultiplicity(MMultiplicity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MEnumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MEnumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMEnumeration(MEnumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MBoolean</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MBoolean</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMBoolean(MBoolean object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MDate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MDate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMDate(MDate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MDecimal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MDecimal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMDecimal(MDecimal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MInteger</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MInteger</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMInteger(MInteger object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MText</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MText</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMText(MText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MUuid</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MUuid</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMUuid(MUuid object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Element Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Element Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElementAttribute(ElementAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Element Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Element Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElementBehaviour(ElementBehaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerElement(InnerElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behaviour Dependency</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behaviour Dependency</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBehaviourDependency(BehaviourDependency object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumeration Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumeration Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumerationValue(EnumerationValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Table</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Table</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryTable(QueryTable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Join</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Join</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryJoin(QueryJoin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryProperty(QueryProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Ordered Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Ordered Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryOrderedProperty(QueryOrderedProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Filter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Filter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryFilter(QueryFilter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Join Predicate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Join Predicate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryJoinPredicate(QueryJoinPredicate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseState(State object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Transition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Transition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateTransition(StateTransition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Decision</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Decision</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateDecision(StateDecision object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Enabled Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Enabled Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateEnabledOperation(StateEnabledOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Enabled Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Enabled Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateEnabledAttribute(StateEnabledAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateBehaviour(StateBehaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Language Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Language Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLanguageText(LanguageText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Authorization Policy Permission</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Authorization Policy Permission</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAuthorizationPolicyPermission(AuthorizationPolicyPermission object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Authorization Role Subject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Authorization Role Subject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAuthorizationRoleSubject(AuthorizationRoleSubject object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MetamodelSwitch
